//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataContractClient.ServRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/DataContractService")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustomerList2", Namespace="http://schemas.datacontract.org/2004/07/DataContractService", ItemName="Contact")]
    [System.SerializableAttribute()]
    public class CustomerList2 : System.Collections.Generic.List<DataContractClient.ServRef.Contact> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SupplierList2", Namespace="http://schemas.datacontract.org/2004/07/DataContractService", ItemName="Contact")]
    [System.SerializableAttribute()]
    public class SupplierList2 : System.Collections.Generic.List<DataContractClient.ServRef.Contact> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SpezialeContact", Namespace="http://schemas.datacontract.org/2004/07/DataContractService", ItemName="Contact")]
    [System.SerializableAttribute()]
    public class SpezialeContact : System.Collections.Generic.List<DataContractClient.ServRef.Contact> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Moods", Namespace="http://schemas.datacontract.org/2004/07/DataContractService")]
    public enum Moods : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Terrible = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bad = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Good = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JollyGood = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SnakePitfall", Namespace="http://schemas.datacontract.org/2004/07/DataContractService")]
    public enum SnakePitfall : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Python = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServRef.IMyService")]
    public interface IMyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetCustomers", ReplyAction="http://tempuri.org/IMyService/GetCustomersResponse")]
        DataContractClient.ServRef.Contact[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetCustomers", ReplyAction="http://tempuri.org/IMyService/GetCustomersResponse")]
        System.Threading.Tasks.Task<DataContractClient.ServRef.Contact[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetSuppliers", ReplyAction="http://tempuri.org/IMyService/GetSuppliersResponse")]
        DataContractClient.ServRef.Contact[] GetSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetSuppliers", ReplyAction="http://tempuri.org/IMyService/GetSuppliersResponse")]
        System.Threading.Tasks.Task<DataContractClient.ServRef.Contact[]> GetSuppliersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetCustomers2", ReplyAction="http://tempuri.org/IMyService/GetCustomers2Response")]
        DataContractClient.ServRef.CustomerList2 GetCustomers2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetCustomers2", ReplyAction="http://tempuri.org/IMyService/GetCustomers2Response")]
        System.Threading.Tasks.Task<DataContractClient.ServRef.CustomerList2> GetCustomers2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetSuppliers2", ReplyAction="http://tempuri.org/IMyService/GetSuppliers2Response")]
        DataContractClient.ServRef.SupplierList2 GetSuppliers2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetSuppliers2", ReplyAction="http://tempuri.org/IMyService/GetSuppliers2Response")]
        System.Threading.Tasks.Task<DataContractClient.ServRef.SupplierList2> GetSuppliers2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetCustomersWithGenericList", ReplyAction="http://tempuri.org/IMyService/GetCustomersWithGenericListResponse")]
        DataContractClient.ServRef.Contact[] GetCustomersWithGenericList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetCustomersWithGenericList", ReplyAction="http://tempuri.org/IMyService/GetCustomersWithGenericListResponse")]
        System.Threading.Tasks.Task<DataContractClient.ServRef.Contact[]> GetCustomersWithGenericListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetSpecialNameCustList", ReplyAction="http://tempuri.org/IMyService/GetSpecialNameCustListResponse")]
        DataContractClient.ServRef.SpezialeContact GetSpecialNameCustList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetSpecialNameCustList", ReplyAction="http://tempuri.org/IMyService/GetSpecialNameCustListResponse")]
        System.Threading.Tasks.Task<DataContractClient.ServRef.SpezialeContact> GetSpecialNameCustListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetCurrentMoodTestingEnum", ReplyAction="http://tempuri.org/IMyService/GetCurrentMoodTestingEnumResponse")]
        DataContractClient.ServRef.Moods GetCurrentMoodTestingEnum();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetCurrentMoodTestingEnum", ReplyAction="http://tempuri.org/IMyService/GetCurrentMoodTestingEnumResponse")]
        System.Threading.Tasks.Task<DataContractClient.ServRef.Moods> GetCurrentMoodTestingEnumAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetSnakePitfallTestingEnumPitfall", ReplyAction="http://tempuri.org/IMyService/GetSnakePitfallTestingEnumPitfallResponse")]
        DataContractClient.ServRef.SnakePitfall GetSnakePitfallTestingEnumPitfall();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetSnakePitfallTestingEnumPitfall", ReplyAction="http://tempuri.org/IMyService/GetSnakePitfallTestingEnumPitfallResponse")]
        System.Threading.Tasks.Task<DataContractClient.ServRef.SnakePitfall> GetSnakePitfallTestingEnumPitfallAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyServiceChannel : DataContractClient.ServRef.IMyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyServiceClient : System.ServiceModel.ClientBase<DataContractClient.ServRef.IMyService>, DataContractClient.ServRef.IMyService {
        
        public MyServiceClient() {
        }
        
        public MyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DataContractClient.ServRef.Contact[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<DataContractClient.ServRef.Contact[]> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public DataContractClient.ServRef.Contact[] GetSuppliers() {
            return base.Channel.GetSuppliers();
        }
        
        public System.Threading.Tasks.Task<DataContractClient.ServRef.Contact[]> GetSuppliersAsync() {
            return base.Channel.GetSuppliersAsync();
        }
        
        public DataContractClient.ServRef.CustomerList2 GetCustomers2() {
            return base.Channel.GetCustomers2();
        }
        
        public System.Threading.Tasks.Task<DataContractClient.ServRef.CustomerList2> GetCustomers2Async() {
            return base.Channel.GetCustomers2Async();
        }
        
        public DataContractClient.ServRef.SupplierList2 GetSuppliers2() {
            return base.Channel.GetSuppliers2();
        }
        
        public System.Threading.Tasks.Task<DataContractClient.ServRef.SupplierList2> GetSuppliers2Async() {
            return base.Channel.GetSuppliers2Async();
        }
        
        public DataContractClient.ServRef.Contact[] GetCustomersWithGenericList() {
            return base.Channel.GetCustomersWithGenericList();
        }
        
        public System.Threading.Tasks.Task<DataContractClient.ServRef.Contact[]> GetCustomersWithGenericListAsync() {
            return base.Channel.GetCustomersWithGenericListAsync();
        }
        
        public DataContractClient.ServRef.SpezialeContact GetSpecialNameCustList() {
            return base.Channel.GetSpecialNameCustList();
        }
        
        public System.Threading.Tasks.Task<DataContractClient.ServRef.SpezialeContact> GetSpecialNameCustListAsync() {
            return base.Channel.GetSpecialNameCustListAsync();
        }
        
        public DataContractClient.ServRef.Moods GetCurrentMoodTestingEnum() {
            return base.Channel.GetCurrentMoodTestingEnum();
        }
        
        public System.Threading.Tasks.Task<DataContractClient.ServRef.Moods> GetCurrentMoodTestingEnumAsync() {
            return base.Channel.GetCurrentMoodTestingEnumAsync();
        }
        
        public DataContractClient.ServRef.SnakePitfall GetSnakePitfallTestingEnumPitfall() {
            return base.Channel.GetSnakePitfallTestingEnumPitfall();
        }
        
        public System.Threading.Tasks.Task<DataContractClient.ServRef.SnakePitfall> GetSnakePitfallTestingEnumPitfallAsync() {
            return base.Channel.GetSnakePitfallTestingEnumPitfallAsync();
        }
    }
}
